{"ast":null,"code":"var _jsxFileName = \"E:\\\\100xDev\\\\E-commerce Dashboard\\\\frontend\\\\src\\\\components\\\\AddProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProduct = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const addProduct = async () => {\n    console.log(!name);\n    if (!name || !price || !category || !company) {\n      return false;\n    }\n    console.log(name, price, category, company);\n    const userId = JSON.parse(localStorage.getItem('user'))._id;\n    let result = await fetch(\"http://localhost:5000/add-product\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        price,\n        category,\n        company,\n        userId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    result = await result.json();\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter product name\",\n      className: \"inputBox\",\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter product price\",\n      className: \"inputBox\",\n      value: price,\n      onChange: e => {\n        setPrice(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter product category\",\n      className: \"inputBox\",\n      value: category,\n      onChange: e => {\n        setCategory(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter product company\",\n      className: \"inputBox\",\n      value: company,\n      onChange: e => {\n        setCompany(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addProduct,\n      className: \"appButton\",\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AddProduct, \"7KjJ7L3AxKAm7Wdp7yUSmZ7uv+k=\");\n_c = AddProduct;\nexport default AddProduct;\nvar _c;\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddProduct","_s","name","setName","price","setPrice","category","setCategory","company","setCompany","addProduct","console","log","userId","JSON","parse","localStorage","getItem","_id","result","fetch","method","body","stringify","headers","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/100xDev/E-commerce Dashboard/frontend/src/components/AddProduct.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst AddProduct = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const addProduct= async ()=>{\r\n\r\n    console.log(!name);\r\n    if(!name || !price || !category || !company ){\r\n\r\n      return false;\r\n    }\r\n    \r\n    console.log(name,price,category,company);\r\n    const userId = JSON.parse(localStorage.getItem('user'))._id;\r\n    let result = await fetch(\"http://localhost:5000/add-product\",{\r\n      method: \"POST\",\r\n      body:JSON.stringify({name, price, category, company, userId}),\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      }\r\n\r\n    });\r\n    result = await result.json();\r\n    console.log(result);\r\n    \r\n\r\n  }\r\n  return (\r\n    <div className='product'>\r\n      <h1>\r\n        Add Product\r\n      </h1>\r\n      <input type='text' placeholder='Enter product name' className='inputBox' value={name} onChange={(e)=>{setName(e.target.value)}} />\r\n      <input type='text' placeholder='Enter product price' className='inputBox' value={price} onChange={(e)=>{setPrice(e.target.value)}}/>\r\n      <input type='text' placeholder='Enter product category' className='inputBox' value={category} onChange={(e)=>{setCategory(e.target.value)}} />\r\n      <input type='text' placeholder='Enter product company' className='inputBox' value={company} onChange={(e)=>{setCompany(e.target.value)}} />\r\n      <button onClick={addProduct} className='appButton'>Add Product</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddProduct"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}